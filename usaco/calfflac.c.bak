/*
ID: gabriel9
LANG: C
TASK: calfflac
*/

#include <stdio.h>

#define MAX 20000
#define MP 2000

char entrada[MAX];
char saida[MAX];
int posori[MAX];

int ehalfa(char c)
{
  if(c >= 'A' && c <= 'Z')
    return 1;
  if(c >= 'a' && c <= 'z')
    return 1;
  return 0;
}

char min(char c)
{
  if(c >= 'A' && c <= 'Z')
    return c - 'A' + 'a';
  return c;
}

int epalindromo(int i, int j)
{
  while(i < j){
    if(entrada[i] != entrada[j])
      return 0;
    else{
      i++; j--;
    }
  }
  return 1;
}

int  main()
{
  /*  
  FILE *fin = fopen("calfflac.in", "r");
  FILE *fout = fopen("calfflac.out", "w");
  */
  FILE *fin = stdin;
  FILE *fout = stdout;
  
  int i, j, tam;
  int e, d, maior;

  tam = -1;
  do{
    saida[++tam] = getc(fin);
  }while(saida[tam] != EOF);
  tam++;

  j = 0;
  for(i=0; i<tam; i++){
    if(ehalfa(saida[i])){
      entrada[j] = min(saida[i]);
      posori[j] = i;
      j++;
    }
  }
  tam = j;

  e = d = 0;
  maior = 1;
  for(i=0; i<tam; i++){
    j = (i + MP < tam ? i + MP : tam - 1);
    while(j - i + 1 > maior){
      if(epalindromo(i, j)){
	d = j; e = i;
	maior = j - i + 1;
	break;
      }
      j--;
    } 
  }
  fprintf(fout, "%d\n", maior);

  for(i=posori[e]; i<=posori[d]; i++)
    putc(saida[i], fout);
  putc('\n', fout);
  return 0;
}
